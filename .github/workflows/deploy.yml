name: Flexible Deploy to Kamatera

on:
  workflow_dispatch:
    inputs:
      deploy_confirmation:
        description: 'Type "yes" to confirm deployment'
        required: true
      pull_changes:
        description: 'Pull latest changes?'
        required: true
        default: 'yes'
      run_migrations:
        description: 'Run database migrations?'
        required: true
        default: 'no'
      restart_backend:
        description: 'Restart backend server?'
        required: true
        default: 'no'
      rebuild_frontend:
        description: 'Rebuild and restart frontend?'
        required: true
        default: 'no'
      restart_nginx:
        description: 'Restart Nginx?'
        required: true
        default: 'no'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.inputs.deploy_confirmation == 'yes'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.0
      with:
        ssh-private-key: ${{ secrets.KAMATERA_SSH_PRIVATE_KEY }}

    - name: Deploy to Kamatera
      env:
        HOST: ${{ secrets.KAMATERA_HOST }}
        USER: ${{ secrets.KAMATERA_USER }}
      run: |
        ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
          # Navigate to your project directory
          cd /path/to/your/project

          # Pull the latest changes
          if [ "${{ github.event.inputs.pull_changes }}" == "yes" ]; then
            echo "Pulling latest changes..."
            git pull origin main
          fi

          # Run Django migrations
          if [ "${{ github.event.inputs.run_migrations }}" == "yes" ]; then
            echo "Running migrations..."
            source /path/to/your/venv/bin/activate
            pip install -r requirements.txt
            python manage.py migrate
          fi

          # Restart the backend server
          if [ "${{ github.event.inputs.restart_backend }}" == "yes" ]; then
            echo "Restarting backend..."
            screen -S backend -X stuff $'\003'
            screen -S backend -X stuff 'python manage.py runserver 0.0.0.0:8000\n'
          fi

          # Rebuild and restart frontend
          if [ "${{ github.event.inputs.rebuild_frontend }}" == "yes" ]; then
            echo "Rebuilding and restarting frontend..."
            cd frontend
            npm install
            npm run build
            screen -S frontend -X stuff $'\003'
            screen -S frontend -X stuff 'npm start\n'
          fi

          # Restart Nginx
          if [ "${{ github.event.inputs.restart_nginx }}" == "yes" ]; then
            echo "Restarting Nginx..."
            sudo systemctl restart nginx
          fi
        EOF

    - name: Verify Deployment
      run: |
        echo "Deployment steps completed. Verify the changes at your server's IP or domain."